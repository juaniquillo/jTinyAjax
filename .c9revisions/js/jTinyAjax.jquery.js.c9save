{"ts":1352213368959,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n * jQuery jTinyAjax plugin\n * @version 1.2 \n * @requires jQuery v1.4.2 or later\n * @requires TinyMCE Package\n * @author Victor Sanchez\n * \n * Copyright (c) 2011 Victor Sanchez\n * http://juaniquillo.com\n * MIT licensed:\n * http://www.opensource.org/licenses/mit-license.php\n */\n \n(function($){\n   \n   $.fn.jTinyAjax = function (options) {\n   \n   var defaults = {\n      //url para el ajax\n      url: \"\",\n      //tipo de request\n      typeRequest: \"post\",\n      //opciones defecto de TinyMCE\n      tinymceinit:{\n         theme : \"advanced\",\n         mode : \"exact\",\n         theme_advanced_buttons1 : \"bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,formatselect, removeformat\",\n         theme_advanced_buttons2 : \"\",\n         theme_advanced_toolbar_location : \"top\",\n         theme_advanced_toolbar_align : \"left\",\n         theme_advanced_statusbar_location : \"bottom\",\n         theme_advanced_resizing : true\n      },\n      //parametros extras para enviar en la consulta AJAX\n      extraParam : '',\n      //texto del boton de \"save\"\n      buttonTextEdit: 'save',\n      //texto del boton de \"cancel\"\n      buttonTextCancel: 'cancel',\n      //opcion para convertir botones en botones de jQuery UI\n      UIfy: false,\n      //opcion para usar blockUI\n      blockUI: false,\n      //opciones de blockUI\n      blockOptions:{ \n         message: '<img src=\"images/ajax-loader.gif\" />',\n         overlayCSS: {backgroundColor: '#eee',opacity: 0.5},\n         css: { \n            border: 'none',\n            backgroundColor: 'transparent'\n           // opacity: 0.6\n         },\n         fadeIn:  200, \n         fadeOut:  200\n       },\n      //tipo de data a recibirse. HTML para el comportamiento defecto. Si se usa json se espera un campo llamado \"data\" el cual debe poseer la informacion que se quiere colocar en el editor web\n      ajaxTypeData: 'html',\n      //callback que se ejecuta cuando se le da click al elemetno para editarlo\n      onClick: function(){\n         \n      },\n      //callback que se ejecuta cuando se le da click al boton de cancelar\n      onCancel: function(){\n         \n      },\n      //callback que se ejecuta cuando se le da click al boton de enviar\n      onSend: function(){\n         \n      },\n      //callback que se ejecuta cuando hay un error en la consulta\n      onError: function(){\n        \n      },\n      //callback que se ejecuta cuando se existe un error con la consulta\n      onSuccess: function(){\n         \n      }\n   },\n   //variables y m�todos internos\n   internal = {\n      //clase que se aplica al container\n      classEdit: \"editjTinyAjax\",\n      //id que se aplica al elemento si no tiene uno asignado\n      idEdit: \"jTinyAjax\",\n      //id del container\n      idEditConatiner: \"jTinyAjaxContain\",\n      //template para el formulario\n      templateFormEd : '<form action=\"\" class=\"form_edit_ad\"><button class=\"botons_ui edit_bot_ad\" onclick=\"return false\"><span class=\"ui-button-text\"> </span> </button><button class=\"botons_ui cancelar_bot_ad\" onclick=\"return false\"><span class=\"ui-button-text\"> </span></button><input type=\"hidden\", class=\"editar_hid_imp_ad\" value=\"\" /></form>',\n      //iniciar plugin\n      ini: function(objeto, index){\n\t\t//variables de iniciacion\n\t\t var idActual = objeto.attr('id') || internal.idEdit + '_' + index,\n\t\t\t//id del container\n\t\t\tidContainer = internal.idEditConatiner + '_' + index,\n            //objeto para la data()\n            dataEle = {\n                  'idContainer': idContainer,\n                  'idEle': idActual\n            },\n            //agregar formulario\n            formEd = $(internal.templateFormEd).hide().find('.editar_hid_imp_ad').attr('value', index + 1).end();\n         //append texto a los botones\n         formEd.find('.edit_bot_ad .ui-button-text').html(options.buttonTextEdit).end().find('.cancelar_bot_ad .ui-button-text').html(options.buttonTextCancel);\n         //agregar id, agregar id al container, agregar container y append formulario\n         objeto.addClass(internal.classEdit).attr('id', idActual).wrap('<div id=\"'+ idContainer +'\" class=\"container_editor_ad\" />').data(dataEle).parent().append(formEd);\n         //botones UI\n         if(options.UIfy){\n            internal.uiInit(dataEle.idContainer);\n         }\n      },\n      //activar\n      clickEdit: function(objeto){\n\t\t//id elemento\n\t\tvar idElem = objeto.data('idEle'),\n\t\t\t//id container\n\t\t\tidContainer = objeto.data('idContainer');\n         //delegate para el click\n         $('#' + idContainer).delegate('.editjTinyAjax', 'click', function(){\n            var elemnt = $('#' + idElem ),\n               content = elemnt.html();\n            //contenido HTML\n            $('#' + idElem ).data({\n               'html' : content\n            });\n            //Opciones de TinyMCE\n            defaults.tinymceinit.elements = idElem;\n            //callback cuando el editor termine de cargar (actualmente no se usa)\n            //options.tinymceinit.init_instance_callback = function(){};\n            //tinyMCE Init (Habilitar tinyMCE)\n            tinyMCE.init(options.tinymceinit);\n            //mostrar formulario\n            $('#' + idContainer + ' .form_edit_ad').show();\n            //callback\n            options.onClick(content);\n            return false;\n\t});\n         \n      },\n      //consulta ajax\n      send: function(objeto){\n         //id elemento\n\t\t var idElem = objeto.data('idEle'),\n\t\t\t//id container\n\t\t\tidContainer = objeto.data('idContainer'),\n\t\t\t//objeto del container\n\t\t\tcontainer = $('#' + idContainer);\n         \n         container.delegate('.edit_bot_ad', 'click', function(){\n               //contenido HTML\n            var contentHTML = tinyMCE.get(idElem).getContent(),\n               //Parametros extra\n               opcionesAjax = {\n               //URL para el ajax\n               url: options.url,\n               //tipo ajax\n               type: options.typeRequest,\n               //variables a enviar\n               data: \"data=\" + escape(contentHTML) + '&' + options.extraParam,\n               //tipo de data\n               dataType: options.typeData,\n               //si se tiene exito\n               success: function(content){\n                  //quitar elementos/igualar contenido al obtenido por ajax\n                  //si es json\n                  if(options.ajaxTypeData === \"json\"){\n                     //usar parseJSON() de jQuery para el contenido\n                     content = $.parseJSON(content);\n                     internal.remove(idElem, idContainer, content.editor);\n                  }\n                  //si no es json\n                  else{\n                     internal.remove(idElem, idContainer, content);\n                  }\n                  //desbloquear\n                  if(options.blockUI) {\n                     internal.unblockInt(container);\n                  }\n                  //callback\n                  options.onSuccess(content);\n                  \n               },\n               error: function(XMLHttpRequest, textStatus){\n                  //desbloquear\n                  if(options.blockUI) {\n                     internal.unblockInt(container);\n                  }\n                  ////callback\n                  options.onError(textStatus);\n               }\n            };\n            //onSend callback\n            options.onSend(contentHTML);\n            //bloquear elemento\n            if(options.blockUI) {\n               internal.blockInt(container);\n            }\n            // Llamada AJAX\n            $.ajax(opcionesAjax);\n         });\n         \n      },\n      //cancelar\n      cancel: function(objeto){\n\t\t //id elemento\n\t\t var idElem = objeto.data('idEle'),\n\t\t\t//id container\n\t\t\tidContainer = objeto.data('idContainer'),\n\t\t\t//content esta vacio\n\t\t\tcontent;\n         $('#' + idContainer).delegate('.cancelar_bot_ad', 'click', function(){\n            content = $('#' + idElem).data('html');\n            internal.remove(idElem, idContainer, content);\n            options.onCancel(content);\n            return false;\n         });\n      },\n      //remover\n      remove: function(idElem, idContainer, content){\n         //contenido\n         if(content !== '') {\n            tinyMCE.get(idElem).setContent(content);\n         }\n         //remover instance de tinyMCE\n         tinyMCE.execCommand('mceRemoveControl', false, idElem);\n         //ocultar formulario\n         $('.form_edit_ad', '#' + idContainer).hide();\n      },\n      //bloquear plugin\n      blockInt: function(objeto){\n         if($.fn.block){\n            objeto.block(options.blockOptions);\n         }\n      },\n      //desbloquear plugin\n      unblockInt: function(objeto){\n         if($.fn.unblock){\n            objeto.unblock();\n         }\n      },\n      //botones jquery UI\n      uiInit: function(containerId){\n         if($.fn.button){\n            //convetir botones a botones de jquery UI\n            $('.botons_ui', '#' + containerId).button();\n         }\n      }\n        \n   };\n   \n   return this.each(function(){\n      //para tener id �nicos para los editores y containers\n\t  var $index2 = $('div[id^=\"'+ internal.idEdit +'\"]').length;\n\t  //opciones\n\t  options = $.extend(defaults, options);\n\t  //objeto jquery actual\n      var objeto = $(this);\n      //iniciar\n      internal.ini(objeto, $index2);\n      //click\n      internal.clickEdit(objeto);\n      //cancel\n      internal.cancel(objeto);\n      //enviar\n      internal.send(objeto);\n\n   });\n };\n \n}(jQuery));"]],"start1":0,"start2":0,"length1":0,"length2":9429}]],"length":9429}
{"contributors":[],"silentsave":false,"ts":1352214002894,"patch":[[{"diffs":[[0," y m"],[-1,"�t"],[1,"e"],[0,"odos"]],"start1":2508,"start2":2508,"length1":10,"length2":9},{"diffs":[[0,"acion\n\t\t"],[-1," "],[0,"var idAc"]],"start1":3241,"start2":3241,"length1":17,"length2":16},{"diffs":[[0,"o){\n        "],[-1," "],[0,"//id element"]],"start1":5337,"start2":5337,"length1":25,"length2":24},{"diffs":[[0,"//id elemento\n\t\t"],[-1," "],[0,"var idElem = obj"]],"start1":5349,"start2":5349,"length1":33,"length2":32},{"diffs":[[0,"k', function(){\n"],[-1,"   "],[0,"            //co"]],"start1":5585,"start2":5585,"length1":35,"length2":32},{"diffs":[[0,"/contenido HTML\n"],[1,""],[0,"            var "]],"start1":5614,"start2":5614,"length1":32,"length2":32},{"diffs":[[0,"eto){\n\t\t"],[-1," "],[0,"//id ele"]],"start1":7591,"start2":7591,"length1":17,"length2":16},{"diffs":[[0,"mento\n\t\t"],[-1," "],[0,"var idEl"]],"start1":7607,"start2":7607,"length1":17,"length2":16},{"diffs":[[0,"ntent){\n        "],[-1," "],[0,"//contenido\n    "]],"start1":8089,"start2":8089,"length1":33,"length2":32},{"diffs":[[0,"    //contenido\n"],[-1," "],[0,"        if(conte"]],"start1":8101,"start2":8101,"length1":33,"length2":32},{"diffs":[[0,"ntent(content);\n"],[-1," "],[0,"        }\n      "]],"start1":8183,"start2":8183,"length1":33,"length2":32},{"diffs":[[0,"ent);\n        }\n"],[1,""],[0,"         //remov"]],"start1":8193,"start2":8193,"length1":32,"length2":32},{"diffs":[[0," de tinyMCE\n"],[-1," "],[0,"        tiny"]],"start1":8236,"start2":8236,"length1":25,"length2":24},{"diffs":[[0,"dElem);\n"],[1,""],[0,"        "]],"start1":8304,"start2":8304,"length1":16,"length2":16},{"diffs":[[0,"\n   \n   "],[1," "],[0,"return t"]],"start1":8930,"start2":8930,"length1":16,"length2":17},{"diffs":[[0,"function(){\n"],[1,"  "],[0,"      //para"]],"start1":8956,"start2":8956,"length1":24,"length2":26},{"diffs":[[0,"tainers\n"],[-1,"\t"],[1,"      "],[0,"  var $i"]],"start1":9022,"start2":9022,"length1":17,"length2":22},{"diffs":[[0,"length;\n"],[-1,"\t"],[1,"      "],[0,"  //opci"]],"start1":9090,"start2":9090,"length1":17,"length2":22},{"diffs":[[0,"pciones\n"],[-1,"\t"],[1,"      "],[0,"  option"]],"start1":9109,"start2":9109,"length1":17,"length2":22},{"diffs":[[0,"tions);\n"],[-1,"\t"],[1,"      "],[0,"  //obje"]],"start1":9156,"start2":9156,"length1":17,"length2":22},{"diffs":[[0,"ctual\n      "],[1,"  "],[0,"var objeto ="]],"start1":9189,"start2":9189,"length1":24,"length2":26},{"diffs":[[0,"his);\n      "],[1,"  "],[0,"//iniciar\n  "]],"start1":9219,"start2":9219,"length1":24,"length2":26},{"diffs":[[0,"  //iniciar\n"],[1,"  "],[0,"      intern"]],"start1":9231,"start2":9231,"length1":24,"length2":26},{"diffs":[[0,"    "],[1,"  "],[0,"//click\n"],[1,"  "],[0,"    "]],"start1":9284,"start2":9284,"length1":16,"length2":20},{"diffs":[[0,"ckEdit(objeto);\n"],[1,"  "],[0,"      //cancel\n "]],"start1":9318,"start2":9318,"length1":32,"length2":34},{"diffs":[[0,"ancel\n      "],[1,"  "],[0,"internal.can"]],"start1":9345,"start2":9345,"length1":24,"length2":26},{"diffs":[[0,";\n      "],[1,"  "],[0,"//enviar"]],"start1":9382,"start2":9382,"length1":16,"length2":18},{"diffs":[[0,"   //enviar\n"],[1,"  "],[0,"      intern"]],"start1":9389,"start2":9389,"length1":24,"length2":26}]],"length":9457,"saved":false}
{"ts":1352214009934,"patch":[[{"diffs":[[0," id "],[-1,"�"],[1,"u"],[0,"nico"]],"start1":8988,"start2":8988,"length1":9,"length2":9}]],"length":9457,"saved":false}
